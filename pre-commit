#!/usr/bin/python
"""
Git hook to catch pyflakes and pep8 issues before committing.

How it works?
copy file to '/usr/share/git-core/templates/hooks/' then,
it will automatically copy to .git/hooks whenever new repository is cloned.

Before committing changes this file will get all staged python files
and run pyflakes, pep8 on each file and exit commit process if there is any
violation.
"""

__author__ = 'Avinash Yenikapati'

import subprocess
import re
import os
from sys import exit

EXCLUDE_PATTERNS = "import\s+\*"
TOOLS = ['pyflakes', 'pep8']
ZOPE_DATETIME_PDB_PATTERN = "pdb|DateTime"


def get_staged_files():
    """
    get all staged files for next commit
    """
    proc = subprocess.Popen(('git', 'status', '--porcelain'), stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    out, _ = proc.communicate()
    staged_files = re.findall(r'^[AM]\s+(.*\.py)', out, re.MULTILINE)
    return staged_files


def validate_with_analysis_tools():
    """
    validates staged file with analysis tool and
    generates report
    """
    issue_dict = {}
    staged_files = get_staged_files()
    pdb_report = ""

    for each_staged_files in staged_files:
            proc1 = subprocess.Popen(
                ('grep', '-EHn', ZOPE_DATETIME_PDB_PATTERN, each_staged_files), stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            pdb_report += proc1.communicate()[0]

    if pdb_report:
        print '\033[95m' + "***** Commit failed due to pdb/Zope Datetime related imports in staged files *****\n" + '\033[0m'
        print pdb_report
        exit(1)

    for tool in TOOLS:
        report = ""
        for each_staged_files in staged_files:
            proc2 = subprocess.Popen(
                [tool, os.path.abspath(each_staged_files)], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            report += proc2.communicate()[0]
        issue_dict.setdefault(tool, []).extend(
            [issue for issue in report.splitlines() if not re.findall(EXCLUDE_PATTERNS, issue)])
    if any(issue_dict.values()):
        print '\033[95m' + "***** Commit failed due to below pyflakes / pep8 errors *****\n" + '\033[0m'
        for k, v in issue_dict.iteritems():
            print '\033[94m' + "############ %s ################" % k + '\033[0m'
            print "\n".join(v)
        exit(1)

if __name__ == '__main__':
    validate_with_analysis_tools()
